{
  "version": 3,
  "sources": [
    "app.js",
    "index.js"
  ],
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "this",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "resolve",
    "reject",
    "invoke",
    "record",
    "result",
    "__await",
    "then",
    "unwrapped",
    "error",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "return",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "catch",
    "thrown",
    "delegateYield",
    "LLM_COOKIE_NAME",
    "footerObserver",
    "IntersectionObserver",
    "entries",
    "widgetContainer",
    "document",
    "querySelector",
    "isIntersecting",
    "style",
    "bottom",
    "threshold",
    "receivedFeedbackHandler",
    "isThumbsUp",
    "_ref",
    "hasBeenClicked",
    "question",
    "answer",
    "timestamp",
    "addUserMessage",
    "fetch",
    "credentials",
    "headers",
    "Content-Type",
    "body",
    "JSON",
    "stringify",
    "answer_timestamp",
    "reaction",
    "_unused",
    "addResponseMessage",
    "CANNED_RESPONSES",
    "AZURE_GCP_ANSWER",
    "NO_ANSWER",
    "LoadingMessage",
    "React",
    "createElement",
    "className",
    "Introduction",
    "NoAnswerFound",
    "Link",
    "url",
    "GcpAzureRelatedResponse",
    "NetworkErrorResponse",
    "QuestionSeparator",
    "_ref2",
    "href",
    "target",
    "rel",
    "ResponseWithLinks",
    "_ref3",
    "sources",
    "dangerouslySetInnerHTML",
    "__html",
    "DOMPurify",
    "marked",
    "parse",
    "concat",
    "map",
    "src",
    "Feedback",
    "_ref4",
    "_useState3",
    "useState",
    "_useState4",
    "_slicedToArray",
    "clicked",
    "setClicked",
    "Fragment",
    "onClick",
    "role",
    "aria-label",
    "LLMAssistantWidget",
    "_useState5",
    "_useState6",
    "isEnabled",
    "setIsEnabled",
    "history",
    "useRef",
    "fetchAnswer",
    "_x",
    "_fetchAnswer",
    "apply",
    "arguments",
    "_asyncToGenerator",
    "_callee2",
    "_response",
    "historyEntry",
    "response",
    "responseBody",
    "parsedResponseBody",
    "isRelatedToAzureGCP",
    "_context2",
    "Date",
    "getTime",
    "current",
    "t0",
    "ok",
    "text",
    "related_to_azure_gcp",
    "has_answer",
    "renderCustomComponent",
    "querySelectorAll",
    "el",
    "parentElement",
    "remove",
    "display",
    "setQuickButtons",
    "label",
    "_handleNewUserMessage",
    "_callee3",
    "newMessage",
    "_context3",
    "visibility",
    "useEffect",
    "_getIsEnabled",
    "_callee",
    "_context",
    "X-Webpage-Url",
    "window",
    "location",
    "json",
    "assistant_enabled",
    "getIsEnabled",
    "Cookies",
    "get",
    "date",
    "set",
    "uuidv4",
    "domain",
    "expires",
    "setDate",
    "getDate",
    "footer",
    "observe",
    "navigator",
    "userAgent",
    "match",
    "Widget",
    "handleNewUserMessage",
    "_x2",
    "handleQuickButtonClicked",
    "focus",
    "title",
    "subtitle",
    "profileAvatar",
    "titleAvatar",
    "launcher",
    "handleToggle",
    "_useState",
    "_useState2",
    "showChat",
    "setShowChat",
    "event",
    "alt",
    "Launcher",
    "rootElement",
    "getElementById",
    "ReactDOM",
    "render"
  ],
  "mappings": "+OACAA,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAcA,IAAM6I,EAAkB,cAMlBC,EAAiB,IAAIC,qBACzB,SAAUC,GACR,IAAMC,EAAkBC,SAASC,cAAc,yBAC1CF,IAGDD,EAAQ,GAAGI,eACbH,EAAgBI,MAAMC,OAAS,QACrBN,EAAQ,GAAGI,iBACrBH,EAAgBI,MAAMC,OAAS,UAGnC,CAAEC,UAAW,CAAC,KA8BhB,SAASC,EACPC,EAAUC,EAEVC,GACA,IAFEC,EAAQF,EAARE,SAAUC,EAAMH,EAANG,OAAQC,EAASJ,EAATI,UAGpB,IAAIH,EAAJ,CAGAI,yBAAeN,EAAa,eAAO,gBACnC,IACEO,MAAM,0CAA2C,CAC/C3G,OAAQ,OACR4G,YAAa,UACbC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBV,WACAC,SACAU,iBAAkBT,EAClBU,SAAUf,EAAa,WAAa,iBAGxC,MAAAgB,IAEFC,6BAAmB,iCAGrB,IAAMC,EAAmB,CACvBC,iBACE,0MACFC,UACE,4JAIJ,SAASC,IACP,OAAOC,IAAAC,cAAA,OAAKC,UAAU,8CAGxB,SAASC,IACP,OACEH,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,oBAAmB,sGAEHF,IAAAC,cAAA,WAC7BD,IAAAC,cAAA,WAAM,cAAWD,IAAAC,cAAA,WAAM,4CAAyCD,IAAAC,cAAA,WAAO,IAAI,8CAChCD,IAAAC,cAAA,WAAM,oDACtBD,IAAAC,cAAA,WAC3BD,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,oGASxC,SAASE,IACP,OACEJ,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,oBAAmB,qGAEL,IAC3BF,IAAAC,cAACI,EAAI,CACHC,IAAI,8BACJxE,KAAK,6BACJ,IAAI,KACJ,IACHkE,IAAAC,cAACI,EAAI,CACHC,IAAI,4BACJxE,KAAK,8BACL,MAOV,SAASyE,IACP,OACEP,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,oBAAmB,+IAEoC,IACpEF,IAAAC,cAACI,EAAI,CACHC,IAAI,qDACJxE,KAAK,wBACJ,IAAI,MACH,IACJkE,IAAAC,cAACI,EAAI,CAACC,IAAI,kCAAkCxE,KAAK,sBAAuB,IAAI,qBAOpF,SAAS0E,IACP,OACER,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,qCAAoC,uDAOzD,SAASO,IACP,OAAOT,IAAAC,cAAA,MAAIC,UAAU,2BAmDvB,SAASG,EAAIK,GAAgB,IAAbJ,EAAGI,EAAHJ,IAAKxE,EAAI4E,EAAJ5E,KACnB,OACEkE,IAAAC,cAAA,KACEU,KAAML,EACNJ,UAAU,WACVU,OAAO,SACPC,IAAI,uBAEH/E,GAAcwE,GAKrB,SAASQ,EAAiBC,GAAsB,IAAnBjC,EAAMiC,EAANjC,OAAQkC,EAAOD,EAAPC,QACnC,OACEhB,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OACEC,UAAU,mBACVe,wBAAyB,CACvBC,OAAQC,WAAmBC,SAAOC,MAAMvC,OAG3CkC,EAAQzF,OAAS,EAChByE,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKC,UAAU,qBAAmB,SAAAoB,OACb,IAAnBN,EAAQzF,OAAe,GAAK,MAE7ByF,EAAQO,IAAI,SAACC,GAAG,OACfxB,IAAAC,cAACI,EAAI,CAACC,IAAKkB,OAGb,MAKV,SAASC,EAAQC,GAAkC,IAA/B7C,EAAQ6C,EAAR7C,SAAUC,EAAM4C,EAAN5C,OAAQC,EAAS2C,EAAT3C,UACpC4C,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAE1B,OACE7B,IAAAC,cAAAD,IAAAiC,SAAA,KACEjC,IAAAC,cAAA,OACEC,UAAU,0CACVgC,QAAS,WACPzD,GACE,EACA,CAAEI,WAAUC,SAAQC,aACpBgD,GAEFC,GAAW,KAGbhC,IAAAC,cAAA,QAAMkC,KAAK,MAAMC,aAAW,aAAY,iBAI1CpC,IAAAC,cAAA,OACEC,UAAU,4CACVgC,QAAS,WACPzD,GACE,EACA,CAAEI,WAAUC,SAAQC,aACpBgD,GAEFC,GAAW,KAGbhC,IAAAC,cAAA,QAAMkC,KAAK,MAAMC,aAAW,eAAc,kBAS3C,SAASC,IACd,IAAAC,EAAkCV,oBAAS,GAAMW,EAAAT,YAAAQ,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,EAAUC,iBAAO,IAAI,SAEZC,EAAWC,GAAA,OAAAC,EAAAC,MAAAjL,KAAAkL,WAAA,SAAAF,IAwEzB,OAxEyBA,EAAAG,YAAAjO,IAAA+G,KAA1B,SAAAmH,EAA2BrE,GAAQ,IAAAsE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxO,IAAAyB,KAAA,SAAAgN,GAAA,cAAAA,EAAA7G,KAAA6G,EAAAnJ,MAAA,OAUhC,OATK8I,EAAe,CACnBvE,SAAU,CACRA,WACAE,WAAW,IAAI2E,MAAOC,WAExB7E,OAAQ,CACNA,OAAQ,GACRC,UAAW,IAEd0E,EAAA7G,KAAA,EAAA6G,EAAAnJ,KAAA,EAKkB2E,MAAM,wCAAyC,CAC9D3G,OAAQ,OACR4G,YAAa,UACbC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBV,WACA6D,QAASA,EAAQkB,YAEnB,OAVFP,EAAQI,EAAA9J,KAAA8J,EAAAnJ,KAAA,eAAAmJ,EAAA7G,KAAA,EAAA6G,EAAAI,GAAAJ,EAAA,qBAaE,QAbFN,EAaNE,SAAQ,IAAAF,OAAA,EAARA,EAAUW,IAAE,CAAAL,EAAAnJ,KAAA,gBAAAmJ,EAAAnJ,KAAA,GACa+I,EAASU,OAAM,QAApCT,EAAYG,EAAA9J,KACZ4J,EAAqBjE,KAAK+B,MAAMiC,GACtCF,EAAatE,OAAOC,UAAYwE,EAAmBxE,WAE7CyE,EAAsBD,EAAmBS,wBACnBT,EAAmBU,YAChCT,EAzRjBU,gCAAsB3D,EAAyB,IAAI,GAEnD2D,gCAAsB9D,EAAe,IAAI,GAwRrCgD,EAAatE,OAAOA,OAAS0E,EACzB5D,EAAmC,iBACnCA,EAA4B,YAEhCsE,gCAAsBpD,EAAmByC,GAAoB,GACzDA,EAAmBvC,QAAQzF,OAAS,GACtC2I,gCACEzC,EACA,CACE5C,WACAC,OAAQyE,EAAmBzE,OAC3BC,UAAWwE,EAAmBxE,YAEhC,GAGJqE,EAAatE,OAAOA,OAASyE,EAAmBzE,QAGlD4D,EAAQkB,QAAQ5I,KAAKoI,GACjBV,EAAQkB,QAAQrI,OAAS,IAC3BmH,EAAQkB,QAAUlB,EAAQkB,QAAQ9G,OAAO,IAC1C2G,EAAAnJ,KAAA,iBAGD4J,gCAAsB1D,EAAsB,IAAI,GAAM,QA1T1DrC,SAASgG,iBAAiB,gBAAgB9L,QAAQ,SAAC+L,GACjDA,EAAGC,cAAcC,WA6TjBnG,SAASC,cAAc,eAAeE,MAAMiG,QAAU,OACtDC,0BAAgB,CACd,CACEC,MAAO,uBACP9O,MAAO,MAER,yBAAA8N,EAAA1G,SAAAmG,EAAA,kBACJH,MAAAjL,KAAAkL,WAEkC,SAAA0B,IAIlC,OAJkCA,EAAAzB,YAAAjO,IAAA+G,KAAnC,SAAA4I,EAAoCC,GAAU,OAAA5P,IAAAyB,KAAA,SAAAoO,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAvK,MAAA,OAEsB,OADlE4J,gCAAsBnE,EAAgB,IAAI,GAC1C5B,SAASC,cAAc,eAAeE,MAAMwG,WAAa,SAASD,EAAAvK,KAAA,EAC5DsI,EAAYgC,GAAW,wBAAAC,EAAA9H,SAAA4H,OAC9B5B,MAAAjL,KAAAkL,WAqDD,OA3CA+B,oBAAU,WACmB,SAAAC,IAgB1B,OAhB0BA,EAAA/B,YAAAjO,IAAA+G,KAA3B,SAAAkJ,IAAA,IAAA5B,EAAAC,EAAA,OAAAtO,IAAAyB,KAAA,SAAAyO,GAAA,cAAAA,EAAAtI,KAAAsI,EAAA5K,MAAA,cAAA4K,EAAAtI,KAAA,EAAAsI,EAAA5K,KAAA,EAE2B2E,MAAM,uCAAwC,CACnE3G,OAAQ,OACR4G,YAAa,UACbC,QAAS,CACPC,eAAgB,mBAChB+F,gBAAiBC,OAAOC,SAAS1E,MAEnCtB,KAAMC,KAAKC,UAAU,MACrB,OARY,OAAR8D,EAAQ6B,EAAAvL,KAAAuL,EAAA5K,KAAA,EASa+I,EAASiC,OAAM,OAApChC,EAAY4B,EAAAvL,KAClB8I,EAAaa,EAAaiC,mBAAmBL,EAAA5K,KAAA,iBAAA4K,EAAAtI,KAAA,GAAAsI,EAAArB,GAAAqB,EAAA,SAE7CzC,GAAa,GAAO,yBAAAyC,EAAAnI,SAAAkI,EAAA,mBAEvBlC,MAAAjL,KAAAkL,WAMD,GAvBc,WACagC,EAAAjC,MAAAjL,KAAAkL,WAkB3BwC,IAIKC,IAAQC,IAAI5H,GAAkB,CACjC,IAAM6H,EAAO,IAAIjC,KACjB+B,IAAQG,IAAI9H,EAAiB+H,cAAU,CACrCC,OAAQ,kBACRC,QAASJ,EAAKK,QAAQL,EAAKM,UAAY,SAG1C,IAEHlB,oBAAU,WACR,GAAIvC,EAAW,CACb0B,gCAAsB/D,EAAc,IAAI,GAExC,IAAM+F,EAAS/H,SAASC,cAAc,iBAClC8H,GACFnI,EAAeoI,QAAQD,KAG1B,CAAC1D,IAzYF4D,UAAUC,UAAUC,MAAM,aAC1BF,UAAUC,UAAUC,MAAM,WAC1BF,UAAUC,UAAUC,MAAM,YAC1BF,UAAUC,UAAUC,MAAM,UAC1BF,UAAUC,UAAUC,MAAM,UAC1BF,UAAUC,UAAUC,MAAM,gBAC1BF,UAAUC,UAAUC,MAAM,oBAqYN9D,EAAY,KAChCxC,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAACsG,SAAM,CACLC,qBA9DL,SAEkCC,GAAA,OAAA/B,EAAA3B,MAAAjL,KAAAkL,YA6D7B0D,yBAvDN,WACElC,0BAAgB,IAChBrG,SAASC,cAAc,eAAeE,MAAMwG,WAAa,UACzD3G,SAASC,cAAc,eAAeE,MAAMiG,QAAU,OACtDpG,SAASC,cAAc,yBAAyBuI,QAChDzC,gCAAsBzD,IAmDlBmG,MAAM,0BACNC,SAAS,GACTC,cAAc,4DACdC,YAAY,4DACZC,SAAU,SAACC,GAAY,OA5Q/B,SAAkBA,GAChB,IAAAC,EAAgCtF,oBAAS,GAAMuF,EAAArF,YAAAoF,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAuB5B,OArBApC,oBAAU,WAEJqC,GACFnI,MAAM,yCAA0C,CAC9C3G,OAAQ,OACR4G,YAAa,UACbC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB+H,MAAO,uBAER3J,MAAM,eAEV,CAACyJ,IAQFpH,IAAAC,cAAA,UAAQC,UAAU,sBAAsBgC,QANvB,WACjBmF,GAAaD,GACbH,MAKGG,EACCpH,IAAAC,cAAA,OACEC,UAAU,qBACVsB,IAAI,kEACJ+F,IAAI,UAGNvH,IAAAC,cAAAD,IAAAiC,SAAA,KACEjC,IAAAC,cAAA,OACEC,UAAU,oBACVsB,IAAI,wEACJ+F,IAAI,SAENvH,IAAAC,cAAA,OAAKC,UAAU,eAAc,iDAqOHsH,CAASP,OCrb7C,IAAMQ,EAActJ,SAASuJ,eAAe,YAC5CC,IAASC,OAAO5H,IAAAC,cAACoC,EAAkB,MAAKoF",
  "file": "static/js/main.785327cf.chunk.js",
  "sourcesContent": [
    "import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Widget,\n  renderCustomComponent,\n  setQuickButtons,\n  addUserMessage,\n  addResponseMessage,\n} from \"react-chat-widget\";\nimport { marked } from \"marked\";\nimport * as DOMPurify from \"dompurify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\n\nimport \"react-chat-widget/lib/styles.css\";\n\nconst LLM_COOKIE_NAME = \"llm_user_id\";\n\n/* OBSERVERS */\n/**\n * Watch for when the footer intersects with the viewport, and move floating agent accordingly.\n */\nconst footerObserver = new IntersectionObserver(\n  function (entries) {\n    const widgetContainer = document.querySelector(\".rcw-widget-container\");\n    if (!widgetContainer) {\n      return;\n    }\n    if (entries[0].isIntersecting) {\n      widgetContainer.style.bottom = \"122px\";\n    } else if (!entries[0].isIntersecting) {\n      widgetContainer.style.bottom = \"32px\";\n    }\n  },\n  { threshold: [0] }\n);\n\n/* HELPER FUNCTIONS */\nfunction isMobile() {\n  return (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/webOS/i) ||\n    navigator.userAgent.match(/iPhone/i) ||\n    navigator.userAgent.match(/iPad/i) ||\n    navigator.userAgent.match(/iPod/i) ||\n    navigator.userAgent.match(/BlackBerry/i) ||\n    navigator.userAgent.match(/Windows Phone/i)\n  );\n}\n\nfunction removeLoadingMessage() {\n  document.querySelectorAll(\".rcw-loading\").forEach((el) => {\n    el.parentElement.remove();\n  });\n}\n\nfunction giveNoAnswer(isAzureGcpRelated) {\n  if (isAzureGcpRelated) {\n    renderCustomComponent(GcpAzureRelatedResponse, {}, true);\n  } else {\n    renderCustomComponent(NoAnswerFound, {}, true);\n  }\n}\n\nfunction receivedFeedbackHandler(\n  isThumbsUp,\n  { question, answer, timestamp },\n  hasBeenClicked\n) {\n  if (hasBeenClicked) {\n    return;\n  }\n  addUserMessage(isThumbsUp ? \"👍\" : \"👎\");\n  try {\n    fetch(\"https://chatapi.databricks.com/feedback\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        question,\n        answer,\n        answer_timestamp: timestamp,\n        reaction: isThumbsUp ? \"thumb_up\" : \"thumb_down\",\n      }),\n    });\n  } catch {}\n\n  addResponseMessage(\"Thank you for your feedback.\");\n}\n\nconst CANNED_RESPONSES = {\n  AZURE_GCP_ANSWER:\n    \"As an AI assistant, I'm currently trained on documentation and knowledge base about Databricks on AWS. Please refer to the documentation for Databricks on Azure and Databricks on GCP in the meantime.\",\n  NO_ANSWER:\n    \"Sorry, I can't find an answer to the question you asked. But you may be able to find the answer in Databricks Documentation or Databricks Knowledge Base\",\n};\n\n/* CUSTOM COMPONENTS */\nfunction LoadingMessage() {\n  return <div className=\"rcw-response rcw-message-text rcw-loading\"></div>;\n}\n\nfunction Introduction() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text\">\n        Hi, I'm the Databricks AI assistant. You can ask me any questions you\n        have about using Databricks. <br />\n        <br /> Examples: <br /> 1. How do I load files into Databricks? <br />{\" \"}\n        2. How do you deploy my model for serving? <br /> 3. How can I convert\n        my files to parquet files? <br />\n        <br />\n        <div className=\"rcw-disclaimer\">\n          Disclaimer: I may display inaccurate information that doesn’t\n          represent Databricks views.\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction NoAnswerFound() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text\">\n        Sorry, I can't find an answer to the question you asked. But you may be\n        able to find the answer in{\" \"}\n        <Link\n          url=\"https://docs.databricks.com\"\n          name=\"Databricks Documentation\"\n        />{\" \"}\n        or{\" \"}\n        <Link\n          url=\"https://kb.databricks.com\"\n          name=\"Databricks Knowledge Base\"\n        />\n        .\n      </div>\n    </div>\n  );\n}\n\nfunction GcpAzureRelatedResponse() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text\">\n        As an AI assistant, I'm currently trained on documentation and knowledge\n        base about Databricks on AWS. Please refer to the documentation for{\" \"}\n        <Link\n          url=\"https://learn.microsoft.com/en-us/azure/databricks\"\n          name=\"Databricks on Azure\"\n        />{\" \"}\n        and{\" \"}\n        <Link url=\"https://docs.gcp.databricks.com\" name=\"Databricks on GCP\" />{\" \"}\n        in the meantime.\n      </div>\n    </div>\n  );\n}\n\nfunction NetworkErrorResponse() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text rcw-rate-limited\">\n        There was a network error. Please try again later.\n      </div>\n    </div>\n  );\n}\n\nfunction QuestionSeparator() {\n  return <hr className=\"rcw-question-separator\" />;\n}\n\nfunction Launcher(handleToggle) {\n  const [showChat, setShowChat] = useState(false);\n\n  useEffect(() => {\n    // send API\n    if (showChat) {\n      fetch(\"https://chatapi.databricks.com/metrics\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          event: \"opened_assistant\",\n        }),\n      }).catch(() => {});\n    }\n  }, [showChat]);\n\n  const toggleChat = () => {\n    setShowChat(!showChat);\n    handleToggle();\n  };\n\n  return (\n    <button className=\"rcw-custom-launcher\" onClick={toggleChat}>\n      {showChat ? (\n        <img\n          className=\"rcw-close-launcher\"\n          src=\"https://agao00.github.io/static/media/chevron-down.041d46cd.svg\"\n          alt=\"close\"\n        />\n      ) : (\n        <>\n          <img\n            className=\"rcw-open-launcher\"\n            src=\"https://agao00.github.io/static/media/speech-bubble-plus.6df5d2c6.svg\"\n            alt=\"open\"\n          />\n          <div className=\"rcw-tooltip\">\n            Ask the Databricks AI assistant a question.\n          </div>\n        </>\n      )}\n    </button>\n  );\n}\n\nfunction Link({ url, name }) {\n  return (\n    <a\n      href={url}\n      className=\"rcw-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {name ? name : url}\n    </a>\n  );\n}\n\nfunction ResponseWithLinks({ answer, sources }) {\n  return (\n    <div className=\"rcw-response\">\n      <div\n        className=\"rcw-message-text\"\n        dangerouslySetInnerHTML={{\n          __html: DOMPurify.sanitize(marked.parse(answer)),\n        }}\n      ></div>\n      {sources.length > 0 ? (\n        <div className=\"rcw-sources\">\n          <div className=\"rcw-sources-title\">{`Source${\n            sources.length === 1 ? \"\" : \"s\"\n          }`}</div>\n          {sources.map((src) => (\n            <Link url={src}></Link>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Feedback({ question, answer, timestamp }) {\n  const [clicked, setClicked] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"rcw-response rcw-feedback rcw-thumbs-up\"\n        onClick={() => {\n          receivedFeedbackHandler(\n            true,\n            { question, answer, timestamp },\n            clicked\n          );\n          setClicked(true);\n        }}\n      >\n        <span role=\"img\" aria-label=\"thumbs up\">\n          👍\n        </span>\n      </div>\n      <div\n        className=\"rcw-response rcw-feedback rcw-thumbs-down\"\n        onClick={() => {\n          receivedFeedbackHandler(\n            false,\n            { question, answer, timestamp },\n            clicked\n          );\n          setClicked(true);\n        }}\n      >\n        <span role=\"img\" aria-label=\"thumbs down\">\n          👎\n        </span>\n      </div>\n    </>\n  );\n}\n\n/* MAIN COMPONENT */\nexport function LLMAssistantWidget() {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const history = useRef([]);\n\n  async function fetchAnswer(question) {\n    const historyEntry = {\n      question: {\n        question,\n        timestamp: new Date().getTime(),\n      },\n      answer: {\n        answer: \"\",\n        timestamp: 0,\n      },\n    };\n\n    let response;\n\n    try {\n      response = await fetch(\"https://chatapi.databricks.com/doc_qa\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          question,\n          history: history.current,\n        }),\n      });\n    } catch {}\n\n    if (response?.ok) {\n      const responseBody = await response.text();\n      const parsedResponseBody = JSON.parse(responseBody);\n      historyEntry.answer.timestamp = parsedResponseBody.timestamp;\n\n      const isRelatedToAzureGCP = parsedResponseBody.related_to_azure_gcp;\n      if (isRelatedToAzureGCP || !parsedResponseBody.has_answer) {\n        giveNoAnswer(isRelatedToAzureGCP);\n        historyEntry.answer.answer = isRelatedToAzureGCP\n          ? CANNED_RESPONSES[\"AZURE_GCP_ANSWER\"]\n          : CANNED_RESPONSES[\"NO_ANSWER\"];\n      } else {\n        renderCustomComponent(ResponseWithLinks, parsedResponseBody, true);\n        if (parsedResponseBody.sources.length > 0) {\n          renderCustomComponent(\n            Feedback,\n            {\n              question,\n              answer: parsedResponseBody.answer,\n              timestamp: parsedResponseBody.timestamp,\n            },\n            true\n          );\n        }\n        historyEntry.answer.answer = parsedResponseBody.answer;\n      }\n\n      history.current.push(historyEntry);\n      if (history.current.length > 3) {\n        history.current = history.current.slice(-3);\n      }\n    } else {\n      // show network error response for all 4xx and 5xx errors\n      renderCustomComponent(NetworkErrorResponse, {}, true);\n    }\n\n    removeLoadingMessage();\n    document.querySelector(\".rcw-sender\").style.display = \"none\";\n    setQuickButtons([\n      {\n        label: \"Ask another question\",\n        value: \"\",\n      },\n    ]);\n  }\n\n  async function handleNewUserMessage(newMessage) {\n    renderCustomComponent(LoadingMessage, {}, true);\n    document.querySelector(\".rcw-sender\").style.visibility = \"hidden\";\n    await fetchAnswer(newMessage);\n  }\n\n  function handleQuickButtonClicked() {\n    setQuickButtons([]);\n    document.querySelector(\".rcw-sender\").style.visibility = \"visible\";\n    document.querySelector(\".rcw-sender\").style.display = \"flex\";\n    document.querySelector(\"input.rcw-new-message\").focus();\n    renderCustomComponent(QuestionSeparator);\n  }\n\n  useEffect(() => {\n    async function getIsEnabled() {\n      try {\n        const response = await fetch(\"https://chatapi.databricks.com/flags\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-Webpage-Url\": window.location.href,\n          },\n          body: JSON.stringify({}),\n        });\n        const responseBody = await response.json();\n        setIsEnabled(responseBody.assistant_enabled);\n      } catch {\n        setIsEnabled(false);\n      }\n    }\n\n    getIsEnabled();\n\n    // Set performance cookie llm_user_id if not already set\n    // If user did not consent to performance cookies, OneTrust will block this from being set\n    if (!Cookies.get(LLM_COOKIE_NAME)) {\n      const date = new Date();\n      Cookies.set(LLM_COOKIE_NAME, uuidv4(), {\n        domain: \".databricks.com\",\n        expires: date.setDate(date.getDate() + 183), // 6 months\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isEnabled) {\n      renderCustomComponent(Introduction, {}, true);\n      // Only watch for footer when footer exists\n      const footer = document.querySelector(\"footer#footer\");\n      if (footer) {\n        footerObserver.observe(footer);\n      }\n    }\n  }, [isEnabled]);\n\n  return isMobile() || !isEnabled ? null : (\n    <div className=\"LLMAssistantWidget\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n        handleQuickButtonClicked={handleQuickButtonClicked}\n        title=\"Databricks AI assistant\"\n        subtitle=\"\"\n        profileAvatar=\"https://agao00.github.io/static/media/dblogo.56ac0149.jpg\"\n        titleAvatar=\"https://agao00.github.io/static/media/dblogo.56ac0149.jpg\"\n        launcher={(handleToggle) => Launcher(handleToggle)}\n      />\n    </div>\n  );\n}\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport { LLMAssistantWidget } from \"./app\";\n\nconst rootElement = document.getElementById(\"rcw-root\");\nReactDOM.render(<LLMAssistantWidget />, rootElement);\n"
  ],
  "sourceRoot": ""
}
