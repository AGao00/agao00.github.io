{
  "version": 3,
  "sources": [
    "app.js",
    "index.js"
  ],
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "this",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "resolve",
    "reject",
    "invoke",
    "record",
    "result",
    "__await",
    "then",
    "unwrapped",
    "error",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "return",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "catch",
    "thrown",
    "delegateYield",
    "adjustHeightWhenResize",
    "$",
    "window",
    "height",
    "concat",
    "rcwHeaderMutationObserver",
    "MutationObserver",
    "document",
    "contains",
    "querySelector",
    "addEventListener",
    "disconnect",
    "footerObserver",
    "IntersectionObserver",
    "entries",
    "isIntersecting",
    "css",
    "threshold",
    "CANNED_RESPONSES",
    "LoadingMessage",
    "React",
    "createElement",
    "className",
    "Introduction",
    "NoAnswerFound",
    "Link",
    "url",
    "GcpAzureRelatedResponse",
    "NetworkErrorResponse",
    "QuestionSeparator",
    "_ref2",
    "href",
    "target",
    "rel",
    "ResponseWithLinks",
    "_ref3",
    "answer",
    "sources",
    "dangerouslySetInnerHTML",
    "__html",
    "DOMPurify",
    "marked",
    "parse",
    "map",
    "src",
    "LLMAssistantWidget",
    "_Component",
    "_inherits",
    "_super",
    "_createSuper",
    "_this",
    "_classCallCheck",
    "_len",
    "arguments",
    "args",
    "Array",
    "_key",
    "apply",
    "isEnabled",
    "history",
    "handleNewUserMessage",
    "_ref5",
    "_asyncToGenerator",
    "_callee",
    "newMessage",
    "_context",
    "renderCustomComponent",
    "style",
    "visibility",
    "fetchAnswer",
    "_x",
    "handleQuickButtonClicked",
    "setQuickButtons",
    "display",
    "focus",
    "_createClass",
    "_componentDidMount",
    "_callee2",
    "response",
    "responseBody",
    "_context2",
    "fetch",
    "headers",
    "Content-Type",
    "body",
    "JSON",
    "stringify",
    "json",
    "setState",
    "assistant_enabled",
    "t0",
    "_prevProps",
    "prevState",
    "footer",
    "observe",
    "_fetchAnswer",
    "_callee3",
    "question",
    "_response",
    "historyEntry",
    "parsedResponseBody",
    "isRelatedToAzureGCP",
    "_context3",
    "timestamp",
    "Date",
    "getTime",
    "getChatHistory",
    "ok",
    "text",
    "related_to_azure_gcp",
    "has_answer",
    "parentElement",
    "remove",
    "label",
    "_x2",
    "navigator",
    "userAgent",
    "match",
    "Widget",
    "title",
    "subtitle",
    "profileAvatar",
    "titleAvatar",
    "launcher",
    "handleToggle",
    "_useState",
    "useState",
    "_useState2",
    "_slicedToArray",
    "showChat",
    "setShowChat",
    "onClick",
    "subtree",
    "childList",
    "alt",
    "Fragment",
    "Launcher",
    "Component",
    "rootElement",
    "getElementById",
    "ReactDOM",
    "render"
  ],
  "mappings": "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",
  "file": "static/js/main.785327cf.chunk.js",
  "sourcesContent": [
    "import React, { Component, useState } from \"react\";\nimport {\n  Widget,\n  renderCustomComponent,\n  setQuickButtons,\n  addUserMessage,\n  addResponseMessage,\n} from \"react-chat-widget\";\nimport { marked } from \"marked\";\nimport * as DOMPurify from \"dompurify\";\nimport $ from \"jquery\";\n\nimport \"react-chat-widget/lib/styles.css\";\n\n/* OBSERVERS */\nfunction adjustHeightWhenResize() {\n  if ($(window).height() >= 850) {\n    // 720px\n    $(\".rcw-conversation-container\").height(\"620px\");\n    $(\".rcw-messages-container\").height(\"502px\");\n  } else {\n    $(\".rcw-conversation-container\").height(`${$(window).height() - 210}px`); // 110px\n    $(\".rcw-messages-container\").height(`${$(window).height() - 328}px`);\n  }\n}\n\n/**\n * Watch for appearance of chat header and add listener to resize depending on window height.\n */\nconst rcwHeaderMutationObserver = new MutationObserver(function () {\n  if (\n    document.contains(\n      document.querySelector(\".rcw-conversation-container .rcw-header\")\n    )\n  ) {\n    adjustHeightWhenResize();\n    window.addEventListener(\"resize\", adjustHeightWhenResize, true);\n    rcwHeaderMutationObserver.disconnect();\n  }\n});\n\n/**\n * Watch for when the footer intersects with the viewport, and move floating agent accordingly.\n */\nconst footerObserver = new IntersectionObserver(\n  function (entries) {\n    if (entries[0].isIntersecting) {\n      $(\".rcw-widget-container\").css(\"bottom\", \"122px\");\n    } else if (!entries[0].isIntersecting) {\n      $(\".rcw-widget-container\").css(\"bottom\", \"32px\");\n    }\n  },\n  { threshold: [0] }\n);\n\n/* HELPER FUNCTIONS */\nfunction isMobile() {\n  return (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/webOS/i) ||\n    navigator.userAgent.match(/iPhone/i) ||\n    navigator.userAgent.match(/iPad/i) ||\n    navigator.userAgent.match(/iPod/i) ||\n    navigator.userAgent.match(/BlackBerry/i) ||\n    navigator.userAgent.match(/Windows Phone/i)\n  );\n}\n\nfunction removeLoadingMessage() {\n  if (document.querySelector(\".rcw-loading\")) {\n    document.querySelector(\".rcw-loading\").parentElement.remove();\n  }\n}\n\nfunction giveNoAnswer(isAzureGcpRelated) {\n  if (isAzureGcpRelated) {\n    renderCustomComponent(GcpAzureRelatedResponse, {}, true);\n  } else {\n    renderCustomComponent(NoAnswerFound, {}, true);\n  }\n}\n\nfunction receivedFeedbackHandler(\n  isThumbsUp,\n  { question, answer, timestamp },\n  hasBeenClicked\n) {\n  if (hasBeenClicked) {\n    return;\n  }\n  addUserMessage(isThumbsUp ? \"👍\" : \"👎\");\n  fetch(\"https://chatapi.databricks.com/feedback\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      question,\n      answer,\n      timestamp,\n    }),\n  });\n  addResponseMessage(\"Thank you for your feedback.\");\n}\n\nconst CANNED_RESPONSES = {\n  AZURE_GCP_ANSWER:\n    \"As an AI assistant, I'm currently trained on documentation and knowledge base about Databricks on AWS. Please refer to the documentation for Databricks on Azure and Databricks on GCP in the meantime.\",\n  NO_ANSWER:\n    \"Sorry, I can't find an answer to the question you asked. But you may be able to find the answer in Databricks Documentation or Databricks Knowledge Base\",\n};\n\n/* CUSTOM COMPONENTS */\nfunction LoadingMessage() {\n  return <div className=\"rcw-response rcw-message-text rcw-loading\"></div>;\n}\n\nfunction Introduction() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text\">\n        Hi, I'm the Databricks AI assistant. You can ask me any questions you\n        have about using Databricks. <br />\n        <br /> Examples: <br /> 1. How do I load files into Databricks? <br />{\" \"}\n        2. How do you deploy my model for serving? <br /> 3. How can I convert\n        my files to parquet files? <br />\n        <br />\n        <div className=\"rcw-disclaimer\">\n          Disclaimer: I may display inaccurate information that doesn’t\n          represent Databricks views.\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction NoAnswerFound() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text\">\n        Sorry, I can't find an answer to the question you asked. But you may be\n        able to find the answer in{\" \"}\n        <Link\n          url=\"https://docs.databricks.com\"\n          name=\"Databricks Documentation\"\n        />{\" \"}\n        or{\" \"}\n        <Link\n          url=\"https://kb.databricks.com\"\n          name=\"Databricks Knowledge Base\"\n        />\n        .\n      </div>\n    </div>\n  );\n}\n\nfunction GcpAzureRelatedResponse() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text\">\n        As an AI assistant, I'm currently trained on documentation and knowledge\n        base about Databricks on AWS. Please refer to the documentation for{\" \"}\n        <Link\n          url=\"https://learn.microsoft.com/en-us/azure/databricks\"\n          name=\"Databricks on Azure\"\n        />{\" \"}\n        and{\" \"}\n        <Link url=\"https://docs.gcp.databricks.com\" name=\"Databricks on GCP\" />{\" \"}\n        in the meantime.\n      </div>\n    </div>\n  );\n}\n\nfunction NetworkErrorResponse() {\n  return (\n    <div className=\"rcw-response\">\n      <div className=\"rcw-message-text rcw-rate-limited\">\n        There was a network error. Please try again later.\n      </div>\n    </div>\n  );\n}\n\nfunction QuestionSeparator() {\n  return <hr className=\"rcw-question-separator\" />;\n}\n\nfunction Launcher(handleToggle) {\n  const [showChat, setShowChat] = useState(false);\n\n  const toggleChat = () => {\n    setShowChat(!showChat);\n    handleToggle();\n    rcwHeaderMutationObserver.observe(document.querySelector(\"#rcw-root\"), {\n      subtree: true,\n      childList: true,\n    });\n  };\n\n  return (\n    <button className=\"rcw-custom-launcher\" onClick={toggleChat}>\n      {showChat ? (\n        <img\n          className=\"rcw-close-launcher\"\n          src=\"https://agao00.github.io/static/media/chevron-down.041d46cd.svg\"\n          alt=\"close\"\n        />\n      ) : (\n        <>\n          <img\n            className=\"rcw-open-launcher\"\n            src=\"https://agao00.github.io/static/media/speech-bubble-plus.6df5d2c6.svg\"\n            alt=\"open\"\n          />\n          <div className=\"rcw-tooltip\">\n            Ask the Databricks AI assistant a question.\n          </div>\n        </>\n      )}\n    </button>\n  );\n}\n\nfunction Link({ url, name }) {\n  return (\n    <a\n      href={url}\n      className=\"rcw-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {name ? name : url}\n    </a>\n  );\n}\n\nfunction ResponseWithLinks({ answer, sources }) {\n  return (\n    <div className=\"rcw-response\">\n      <div\n        className=\"rcw-message-text\"\n        dangerouslySetInnerHTML={{\n          __html: DOMPurify.sanitize(marked.parse(answer)),\n        }}\n      ></div>\n      {sources.length > 0 ? (\n        <div className=\"rcw-sources\">\n          <div className=\"rcw-sources-title\">{`Source${\n            sources.length === 1 ? \"\" : \"s\"\n          }`}</div>\n          {sources.map((src) => (\n            <Link url={src}></Link>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Feedback({ question, answer, timestamp }) {\n  const [clicked, setClicked] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"rcw-response rcw-feedback rcw-thumbs-up\"\n        onClick={() => {\n          receivedFeedbackHandler(\n            true,\n            { question, answer, timestamp },\n            clicked\n          );\n          setClicked(true);\n        }}\n      >\n        <span role=\"img\" aria-label=\"thumbs up\">\n          👍\n        </span>\n      </div>\n      <div\n        className=\"rcw-response rcw-feedback rcw-thumbs-down\"\n        onClick={() => {\n          receivedFeedbackHandler(\n            false,\n            { question, answer, timestamp },\n            clicked\n          );\n          setClicked(true);\n        }}\n      >\n        <span role=\"img\" aria-label=\"thumbs down\">\n          👎\n        </span>\n      </div>\n    </>\n  );\n}\n\n/* MAIN COMPONENT */\nexport class LLMAssistantWidget extends Component {\n  state = {\n    isEnabled: false,\n  };\n\n  history = [];\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\"https://chatapi.databricks.com/flags\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({}),\n      });\n      const responseBody = await response.json();\n      this.setState({ isEnabled: responseBody.assistant_enabled });\n    } catch {\n      this.setState({ isEnabled: true });\n    }\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (!prevState.isEnabled && this.state.isEnabled) {\n      renderCustomComponent(Introduction, {}, true);\n      // Only watch for footer when footer exists\n      const footer = document.querySelector(\"footer#footer\");\n      if (footer) {\n        footerObserver.observe(footer);\n      }\n    }\n  }\n\n  getChatHistory() {\n    this.history = this.history.slice(-4);\n    return this.history.slice(0, -1);\n  }\n\n  async fetchAnswer(question) {\n    const historyEntry = {\n      question: {\n        question,\n        timestamp: new Date().getTime(),\n      },\n      answer: {\n        answer: \"\",\n        timestamp: 0,\n      },\n    };\n\n    let response;\n\n    try {\n      response = await fetch(\"https://chatapi.databricks.com/doc_qa\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          question,\n          history: this.getChatHistory(),\n        }),\n      });\n    } catch {}\n\n    if (response?.ok) {\n      const responseBody = await response.text();\n      const parsedResponseBody = JSON.parse(responseBody);\n      historyEntry.answer.timestamp = parsedResponseBody.timestamp;\n\n      const isRelatedToAzureGCP = parsedResponseBody.related_to_azure_gcp;\n      if (isRelatedToAzureGCP || !parsedResponseBody.has_answer) {\n        giveNoAnswer(isRelatedToAzureGCP);\n        historyEntry.answer.answer = isRelatedToAzureGCP\n          ? CANNED_RESPONSES[\"AZURE_GCP_ANSWER\"]\n          : CANNED_RESPONSES[\"NO_ANSWER\"];\n      } else {\n        renderCustomComponent(ResponseWithLinks, parsedResponseBody, true);\n        // renderCustomComponent(\n        //   Feedback,\n        //   {\n        //     question,\n        //     answer: parsedResponseBody.answer,\n        //     timestamp: parsedResponseBody.timestamp,\n        //   },\n        //   true\n        // );\n        historyEntry.answer.answer = parsedResponseBody.answer;\n      }\n\n      this.history.push(historyEntry);\n    } else {\n      // show network error response for all 4xx and 5xx errors\n      renderCustomComponent(NetworkErrorResponse, {}, true);\n    }\n\n    removeLoadingMessage();\n    document.querySelector(\".rcw-sender\").style.display = \"none\";\n    setQuickButtons([\n      {\n        label: \"Ask another question\",\n        value: \"\",\n      },\n    ]);\n  }\n\n  handleNewUserMessage = async (newMessage) => {\n    renderCustomComponent(LoadingMessage, {}, true);\n    document.querySelector(\".rcw-sender\").style.visibility = \"hidden\";\n    await this.fetchAnswer(newMessage);\n  };\n\n  handleQuickButtonClicked = () => {\n    setQuickButtons([]);\n    document.querySelector(\".rcw-sender\").style.visibility = \"visible\";\n    document.querySelector(\".rcw-sender\").style.display = \"flex\";\n    document.querySelector(\"input.rcw-new-message\").focus();\n    renderCustomComponent(QuestionSeparator);\n  };\n\n  render() {\n    return isMobile() || !this.state.isEnabled ? null : (\n      <div className=\"LLMAssistantWidget\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          handleQuickButtonClicked={this.handleQuickButtonClicked}\n          title=\"Databricks AI assistant\"\n          subtitle=\"\"\n          profileAvatar=\"https://agao00.github.io/static/media/dblogo.56ac0149.jpg\"\n          titleAvatar=\"https://agao00.github.io/static/media/dblogo.56ac0149.jpg\"\n          launcher={(handleToggle) => Launcher(handleToggle)}\n        />\n      </div>\n    );\n  }\n}\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport { LLMAssistantWidget } from \"./app\";\n\nconst rootElement = document.getElementById(\"rcw-root\");\nReactDOM.render(<LLMAssistantWidget />, rootElement);\n"
  ],
  "sourceRoot": ""
}
